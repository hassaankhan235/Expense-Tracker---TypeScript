{"ast":null,"code":"var _jsxFileName = \"/home/khan/Desktop/Self Programming/typescript/expense_tracker/src/component/ExpenseComponent.tsx\";\nimport React, { useState } from 'react';\nimport { ExpenseDispContainer } from './expensecomponent';\nimport './expensecomponent.css';\nimport { UseAppState } from '../appContext';\nimport { FormatDate } from '../Helper Function/functions';\n\nfunction ExpenseComponent(props) {\n  const {\n    title\n  } = props;\n  const {\n    state\n  } = UseAppState();\n  const [monthTotal, setMonthTotal] = useState(0);\n\n  const TotalDisplay = () => {\n    const Total = state.categories.reduce((acc, cat) => {\n      if (title === 'Balance') {\n        return state.Income - Number(monthTotal);\n      }\n\n      return acc + cat.expenses.reduce(getSum, 0);\n    }, 0);\n\n    if (title === 'This Month') {\n      setMonthTotal(Total);\n    }\n\n    return Total;\n  };\n\n  const getSum = (acc, exp) => {\n    // See Title if Today calculate Today's expense\n    console.log(\"DATE COMP\", FormatDate(exp.date).date);\n\n    if (title === 'Today' && FormatDate(exp.date).date === FormatDate(Date()).date) {\n      return acc + Number(exp.expense);\n    } // See Title if This Month calculate This Month expense\n    else if (title === 'This Month' && FormatDate(exp.date).month === FormatDate(Date()).month && FormatDate(exp.date).year === FormatDate(Date()).year) {\n        return acc + Number(exp.expense);\n      } else if (title === 'Balance') {\n        const monthTotal = window.localStorage.getItem('Month');\n        console.log('STORED', Number(state.Income) - Number(monthTotal));\n        return Number(state.Income) - Number(monthTotal);\n      }\n\n    return 0;\n  };\n\n  return /*#__PURE__*/React.createElement(ExpenseDispContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"total-expenses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \" \", title, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"final-expenses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, TotalDisplay())));\n}\n\nexport default ExpenseComponent;","map":{"version":3,"sources":["/home/khan/Desktop/Self Programming/typescript/expense_tracker/src/component/ExpenseComponent.tsx"],"names":["React","useState","ExpenseDispContainer","UseAppState","FormatDate","ExpenseComponent","props","title","state","monthTotal","setMonthTotal","TotalDisplay","Total","categories","reduce","acc","cat","Income","Number","expenses","getSum","exp","console","log","date","Date","expense","month","year","window","localStorage","getItem"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport {ExpenseDispContainer} from './expensecomponent'\nimport {ExpenseComponentprops} from '../types/types' \nimport './expensecomponent.css'\nimport { expense } from '../types/types'\nimport { UseAppState } from '../appContext'\nimport { FormatDate } from '../Helper Function/functions'\n\nfunction ExpenseComponent(props: ExpenseComponentprops) {\n  const {title} = props\n  const {state, } = UseAppState()\n  const [monthTotal, setMonthTotal] = useState(0)\n\n     \n  const TotalDisplay = () => {\n    const Total = state.categories.reduce((acc,cat) => {\n      if(title === 'Balance'){\n        return (state.Income - Number(monthTotal))}\n      return acc + cat.expenses.reduce(getSum,0)\n      },0)\n      if(title === 'This Month'){\n        setMonthTotal(Total)\n        } \n      return Total\n  }\n\n  const getSum = (acc : number,exp: expense) : number => {\n    // See Title if Today calculate Today's expense\n    console.log(\"DATE COMP\", FormatDate(exp.date).date)\n    if(title === 'Today' && FormatDate(exp.date).date === FormatDate(Date()).date){\n      \n      return (acc + Number(exp.expense)) \n    }\n    // See Title if This Month calculate This Month expense\n    else if(title === 'This Month' &&  \n    FormatDate(exp.date).month === FormatDate(Date()).month &&\n    FormatDate(exp.date).year === FormatDate(Date()).year){\n    return (acc + Number(exp.expense))\n   }\n   else if(title === 'Balance'){\n     const monthTotal = window.localStorage.getItem('Month')\n     console.log('STORED', Number(state.Income) -  Number(monthTotal))\n    return (Number(state.Income) -  Number(monthTotal))\n   } \n  return 0\n  }\n  \n\n  return (\n    <ExpenseDispContainer>\n      <div className='total-expenses'>\n        <div> {title} </div>\n        <div className='final-expenses'>\n      {\n          TotalDisplay()\n      }\n      </div>\n      </div>\n    </ExpenseDispContainer>\n  )\n}\n\nexport default ExpenseComponent\n"]},"metadata":{},"sourceType":"module"}