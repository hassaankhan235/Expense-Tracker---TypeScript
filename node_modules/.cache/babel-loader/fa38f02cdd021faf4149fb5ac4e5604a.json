{"ast":null,"code":"var _jsxFileName = \"/home/khan/Desktop/Self Programming/typescript/expense_tracker/src/component/ExpenseComponent.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { ExpenseDispContainer } from './expensecomponent';\nimport './expensecomponent.css';\nimport { UseAppState } from '../appContext';\nimport { FormatDate } from '../Helper Function/functions';\n\nfunction ExpenseComponent(props) {\n  const {\n    title\n  } = props;\n  const {\n    state\n  } = UseAppState();\n  const [monthTotal, setMonthTotal] = useState(0);\n  const [dayTotal, setDayTotal] = useState(0);\n  const [balance, setBalance] = useState(0);\n  useEffect(() => {\n    const TotalDisplay = () => {\n      const Total = state.categories.reduce((acc, cat) => {\n        return acc + cat.expenses.reduce(getSum, 0);\n      }, 0);\n      title === 'This Month' ? setMonthTotal(Total) : title === 'Today' ? setDayTotal(Total) : setBalance(state.Income - monthTotal);\n    };\n\n    TotalDisplay();\n  }, [state]);\n\n  const getSum = (acc, exp) => {\n    // See Title if Today calculate Today's expense\n    console.log(\"DATE COMP\", FormatDate(exp.date).date);\n\n    if (title === 'Today' && FormatDate(exp.date).date === FormatDate(Date()).date) {\n      return acc + Number(exp.expense);\n    } // See Title if This Month calculate This Month expense\n    else if (title === 'This Month' && FormatDate(exp.date).month === FormatDate(Date()).month && FormatDate(exp.date).year === FormatDate(Date()).year) {\n        return acc + Number(exp.expense);\n      }\n\n    return 0;\n  };\n\n  return /*#__PURE__*/React.createElement(ExpenseDispContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"total-expenses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \" \", title, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"final-expenses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, title === 'Balance' ? balance : title === 'This Month' ? monthTotal : title === 'Today' ? dayTotal : 0, console.log('TITLE', title))));\n}\n\nexport default ExpenseComponent;","map":{"version":3,"sources":["/home/khan/Desktop/Self Programming/typescript/expense_tracker/src/component/ExpenseComponent.tsx"],"names":["React","useEffect","useState","ExpenseDispContainer","UseAppState","FormatDate","ExpenseComponent","props","title","state","monthTotal","setMonthTotal","dayTotal","setDayTotal","balance","setBalance","TotalDisplay","Total","categories","reduce","acc","cat","expenses","getSum","Income","exp","console","log","date","Date","Number","expense","month","year"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport {ExpenseDispContainer} from './expensecomponent'\nimport {ExpenseComponentprops} from '../types/types' \nimport './expensecomponent.css'\nimport { expense } from '../types/types'\nimport { UseAppState } from '../appContext'\nimport { FormatDate } from '../Helper Function/functions'\n\nfunction ExpenseComponent(props: ExpenseComponentprops) {\n  const {title} = props\n  const {state, } = UseAppState()\n  const [monthTotal, setMonthTotal] = useState(0) \n  const [dayTotal, setDayTotal] = useState(0)\n  const [balance, setBalance] = useState(0)\n\n  useEffect(() => {\n    const TotalDisplay = () => {\n      const Total = state.categories.reduce((acc,cat) => {\n        return acc + cat.expenses.reduce(getSum,0)\n        },0)\n        title === 'This Month' ? setMonthTotal(Total)  :\n        title ===  'Today' ?  setDayTotal(Total)\n         : setBalance(state.Income - monthTotal)    \n      } \n    TotalDisplay()\n   \n  },[state])\n  \n\n\n  const getSum = (acc : number,exp: expense) : number => {\n    // See Title if Today calculate Today's expense\n    console.log(\"DATE COMP\", FormatDate(exp.date).date)\n    if(title === 'Today' && FormatDate(exp.date).date === FormatDate(Date()).date){\n      \n      return (acc + Number(exp.expense)) \n    }\n    // See Title if This Month calculate This Month expense\n    else if(title === 'This Month' &&  \n    FormatDate(exp.date).month === FormatDate(Date()).month &&\n    FormatDate(exp.date).year === FormatDate(Date()).year){\n    return (acc + Number(exp.expense))\n   }\n  return 0\n  }\n  \n\n  return (\n    <ExpenseDispContainer>\n      <div className='total-expenses'>\n        <div> {title} </div>\n        <div className='final-expenses'>\n      {\n          title === 'Balance' ? balance :\n          title === 'This Month' ? monthTotal : \n          title === 'Today' ? dayTotal : 0\n      }\n\n      {console.log('TITLE', title)}\n      </div>\n      </div>\n    </ExpenseDispContainer>\n  )\n}\n\nexport default ExpenseComponent\n"]},"metadata":{},"sourceType":"module"}